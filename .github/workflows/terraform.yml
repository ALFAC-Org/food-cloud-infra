name: Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      run: terraform init

    - name: Terraform Plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        VPC_CIDR_BLOCK: ${{ secrets.VPC_CIDR_BLOCK }}
        SUBNET_PRIVATE_CIDR_BLOCK: ${{ secrets.SUBNET_PRIVATE_CIDR_BLOCK }}
        SUBNET_PUBLIC_CIDR_BLOCK: ${{ secrets.SUBNET_PUBLIC_CIDR_BLOCK }}
        SUBNET_DATABASE_CIDR_BLOCK: ${{ secrets.SUBNET_DATABASE_CIDR_BLOCK }}
        SUBNET_AVAILABILITY_ZONE: ${{ secrets.SUBNET_AVAILABILITY_ZONE }}
      run: terraform plan -var "region=${{ secrets.AWS_REGION }}" -var "vpc_cidr_block=${{ secrets.VPC_CIDR_BLOCK }}" -var "subnet_private_cidr_block=${{ secrets.SUBNET_PRIVATE_CIDR_BLOCK }}" -var "subnet_public_cidr_block=${{ secrets.SUBNET_PUBLIC_CIDR_BLOCK }}" -var "subnet_database_cidr_block=${{ secrets.SUBNET_DATABASE_CIDR_BLOCK }}" -var "subnet_availability_zone=${{ secrets.SUBNET_AVAILABILITY_ZONE }}"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        VPC_CIDR_BLOCK: ${{ secrets.VPC_CIDR_BLOCK }}
        SUBNET_PRIVATE_CIDR_BLOCK: ${{ secrets.SUBNET_PRIVATE_CIDR_BLOCK }}
        SUBNET_PUBLIC_CIDR_BLOCK: ${{ secrets.SUBNET_PUBLIC_CIDR_BLOCK }}
        SUBNET_DATABASE_CIDR_BLOCK: ${{ secrets.SUBNET_DATABASE_CIDR_BLOCK }}
        SUBNET_AVAILABILITY_ZONE: ${{ secrets.SUBNET_AVAILABILITY_ZONE }}
      run: terraform apply -auto-approve -var "region=${{ secrets.AWS_REGION }}" -var "vpc_cidr_block=${{ secrets.VPC_CIDR_BLOCK }}" -var "subnet_private_cidr_block=${{ secrets.SUBNET_PRIVATE_CIDR_BLOCK }}" -var "subnet_public_cidr_block=${{ secrets.SUBNET_PUBLIC_CIDR_BLOCK }}" -var "subnet_database_cidr_block=${{ secrets.SUBNET_DATABASE_CIDR_BLOCK }}" -var "subnet_availability_zone=${{ secrets.SUBNET_AVAILABILITY_ZONE }}"